@import '../scale-text.scss';
@import '../select-colors.scss';
@import '../../mods/backup-colors.scss';
body {
  /* Hide the scrollbar completely */
  overflow: hidden;

  /* Force body's height to fit the screen */
  height: 100vh;

  /* Apply the background gradient */
  background: linear-gradient(140deg, #1f3131 0%, rgba(61, 98, 98, 1) 50%, #1f3131 100%);
}

#index-body {
  height: 100vh;
  display: grid;
  background: linear-gradient(140deg, $primary-dark 0%, $primary-medium 75%, $primary-dark 100%);
  //--|ğŸ ‹ Desktop (Landscape) - â˜’ ğŸ ‹|--//
  @media screen and (orientation: landscape) and (min-aspect-ratio: 16/9) {
    grid-template: 4rem 1fr 4rem / 6rem 1fr 6rem; //~~|ğŸ Š rows / columns ğŸ ˆ|~~//
    //~~|ğŸ Š border: 4px dashed $red-neon; ğŸ ˆ|~~//
    //~~|ğŸ Š background: rgba($red-dark, 0.75); ğŸ ˆ|~~//
  }
  //--|ğŸ ‹ Mobile (Portrait) - â˜’ ğŸ ‹|--//
  @media screen and (orientation: portrait) and (max-aspect-ratio: 1/1) {
    grid-template: 6rem 1fr 6rem / 4rem 1fr 4rem; //~~|ğŸ Š rows / columns ğŸ ˆ|~~//
    //~~|ğŸ Š border: 4px dashed $blue-neon; ğŸ ˆ|~~//
    //~~|ğŸ Š background: rgba($blue-dark, 0.75); ğŸ ˆ|~~//
  }
  //--|ğŸ ‹ Tablet (Square) - â˜’ ğŸ ‹|--//
  @media screen and (max-aspect-ratio: 16/9) and (min-aspect-ratio: 1/1) {
    grid-template: 4rem 1fr 4rem / 4rem 1fr 4rem; //~~|ğŸ Š rows / columns ğŸ ˆ|~~//
    //~~|ğŸ Š border: 4px dashed $green-neon; ğŸ ˆ|~~//
    //~~|ğŸ Š background: rgba($green-dark, 0.75); ğŸ ˆ|~~//
  }
}

//--|ğŸ ‹| Index Page |ğŸ ‹|--//
@import 'main/default-main/default-main.scss';
@import 'header/default-header/default-header.scss';
@import 'footer/default-footer/default-footer.scss';
@import 'overlay/default-overlay/default-overlay.scss';
@import 'leftbar/default-leftbar/default-leftbar.scss';
@import 'rightbar/default-rightbar/default-rightbar.scss';

/*
// I feel this might be usefull
  // Function to log all elements recursively
  function logElements(element: HTMLElement) {
    let children = element.children;
    let i = 0;

    while (i < children.length) {
      console.log(children[i]);
      // Recursively log the children of the current child element
      logElements(children[i] as HTMLElement);
      i++;
    }
  }

  // Start logging from the section element
  logElements(section);
  */
