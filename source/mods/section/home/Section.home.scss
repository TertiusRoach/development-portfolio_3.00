@import '../../backup-colors.scss';
@import '../../../pages/select-colors.scss';
section {
  //--|🠊 display: grid; 🠈|--//
  div[class*='home'] {
    //--|🠋 Desktop (Landscape) - ☐ 🠋|--//
    @media screen and (orientation: landscape) and (min-aspect-ratio: 16/9) {
      & {
        //--|🠊 display: grid; 🠈|--//
        grid-template: auto 1fr 0.5fr 4fr / repeat(5, 1fr); //~~|🠊 rows / columns 🠈|~~//
        span[class*='title'] {
          display: inherit; //~~|🠊 display: grid; 🠈|~~//
          padding-top: 2rem;
          grid-area: 1 / 1 / 2 / 4; //~~|🠊 row-start / col-start / row-end / col-end 🠈|~~//
          grid-template: 1fr / auto 1fr; //~~|🠊 rows / columns 🠈|~~//
          h1 {
            display: flex;
            align-items: flex-end;
            justify-content: flex-start;

            color: $primary-dark;
            grid-area: 1 / 1 / 2 / 2; //~~|🠊 row-start / col-start / row-end / col-end 🠈|~~//
            filter: drop-shadow(0 0 4px black);
            -webkit-text-stroke: 2px $primary-medium;
            &::before {
              overflow: hidden;
              position: absolute;
              white-space: nowrap;
              color: $primary-light; // Assuming $primary-light is defined elsewhere in your Sass variables
              content: attr(data-text);
              border-right: 4px solid rgba($primary-light, 0.75); // Initial border color
              filter: drop-shadow(0 0 1rem rgba($primary-medium, 0.25));
              animation: animate 90s cubic-bezier(0.42, 0, 0.58, 1) infinite;
            }

            @keyframes animate {
              0% {
                border-right-color: rgba($primary-light, 0.75); // Start with $primary-light color
                width: 0;
              }
              50% {
                border-right-color: rgba($primary-medium, 0.75); // Transition to $primary-medium color
                width: 100%;
              }
              100% {
                border-right-color: rgba($primary-dark, 0.75); // End with $primary-dark color
                width: 0;
              }
            }
          }
        }
        span[class*='buttons'] {
          display: flex;
          align-items: center;
          justify-content: space-around;

          grid-area: 2 / 1 / 3 / 4; //~~|🠊 row-start / col-start / row-end / col-end 🠈|~~//
          //--|🠊 <button> Module Here 🠈|--//
        }
        span[class*='subject'] {
          display: flex;
          align-items: flex-end;
          justify-content: flex-start;
          grid-area: 3 / 1 / 4 / 4; //~~|🠊 row-start / col-start / row-end / col-end 🠈|~~//
          h3 {
            color: $primary-light;
            filter: drop-shadow(0 0 0.25rem rgba(black, 0.75));
          }
        }
        span[class*='description'] {
          display: flex;
          padding-bottom: 2rem;
          flex-direction: column;
          grid-area: 4 / 1 / 5 / 4; //~~|🠊 row-start / col-start / row-end / col-end 🠈|~~//
          justify-content: space-between;
          p {
            padding: 0 4px; //~~|🠊 top + bot / left + right 🠈|~~//
            line-height: 1.5;
            word-spacing: 2px;
            text-align: justify;
          }
          p,
          h6 {
            color: white;
            filter: drop-shadow(0 0 4px black);
          }
        }
        aside[class*='profile'] {
          display: grid;
          padding: 2rem / 0;
          grid-area: 1 / 3 / 5 / 6; //~~|🠊 row-start / col-start / row-end / col-end 🠈|~~//
          grid-template: repeat(3, auto) / repeat(3, auto); //~~|🠊 rows / columns 🠈|~~//

          img {
            width: 100%;
            grid-area: 2 / 2 / 3 / 3; //~~|🠊 row-start / col-start / row-end / col-end 🠈|~~//
          }
        }
      }
    }
    //--|🠋 Mobile (Portrait) - ☐ 🠋|--//
    @media screen and (orientation: portrait) and (max-aspect-ratio: 1/1) {
      & {
        //--|🠊 display: grid; 🠈|--//

        // background: $blue-neon;
        // grid-template: auto 1fr auto / 1fr; //~~|🠊 rows / columns 🠈|~~//
      }
    }
    //--|🠋 Tablet (Square) - ☐ 🠋|--//
    @media screen and (max-aspect-ratio: 16/9) and (min-aspect-ratio: 1/1) {
      & {
        //--|🠊 display: grid; 🠈|--//
        grid-template: auto 4fr auto 6fr / repeat(3, 1fr); //~~|🠊 rows / columns 🠈|~~//

        span[class*='title'] {
          z-index: 0;
          display: inherit; //~~|🠊 display: grid; 🠈|~~//
          padding-top: 2rem;
          grid-area: 1 / 1 / 2 / 4; //~~|🠊 row-start / col-start / row-end / col-end 🠈|~~//
          grid-template: 1fr / 1fr auto 1fr; //~~|🠊 rows / columns 🠈|~~//
          h1 {
            display: flex;
            align-items: center;
            grid-area: 1 / 2 / 2 / 3; //~~|🠊 row-start / col-start / row-end / col-end 🠈|~~//

            color: $primary-dark;
            filter: drop-shadow(0 0 4px black);
            -webkit-text-stroke: 2px $primary-medium;
            &::before {
              overflow: hidden;
              position: absolute;
              white-space: nowrap;
              color: $primary-light; // Assuming $primary-light is defined elsewhere in your Sass variables
              content: attr(data-text);
              border-right: 4px solid rgba($primary-light, 0.75); // Initial border color
              filter: drop-shadow(0 0 1rem rgba($primary-medium, 0.25));
              animation: animate 90s cubic-bezier(0.42, 0, 0.58, 1) infinite;
            }

            @keyframes animate {
              0% {
                border-right-color: rgba($primary-light, 0.75); // Start with $primary-light color
                width: 0;
              }
              50% {
                border-right-color: rgba($primary-medium, 0.75); // Transition to $primary-medium color
                width: 100%;
              }
              100% {
                border-right-color: rgba($primary-dark, 0.75); // End with $primary-dark color
                width: 0;
              }
            }
          }
        }
        span[class*='buttons'] {
          z-index: 2;
          display: flex;
          align-items: center;
          grid-area: 2 / 1 / 3 / 4; //~~|🠊 row-start / col-start / row-end / col-end 🠈|~~//
          justify-content: space-around;
        }
        span[class*='subject'] {
          z-index: 3;
          display: flex;
          padding-left: 8%;
          grid-area: 3 / 1 / 4 / 4; //~~|🠊 row-start / col-start / row-end / col-end 🠈|~~//
          justify-content: flex-start;
          h3 {
            color: $primary-light;
            filter: drop-shadow(0 0 0.25rem rgba(black, 0.75));
          }
        }
        span[class*='description'] {
          z-index: 4;
          display: flex;
          flex-direction: column;
          padding: 0 16% 2rem 16%;
          grid-area: 4 / 1 / 5 / 4; //~~|🠊 row-start / col-start / row-end / col-end 🠈|~~//
          justify-content: space-between;

          p {
            padding: 0 4px; //~~|🠊 top + bot / left + right 🠈|~~//
            line-height: 1.5;
            word-spacing: 2px;
            text-align: justify;
          }
          p,
          h6 {
            color: white;
            filter: drop-shadow(0 0 4px black);
          }
        }
        aside[class*='profile'] {
          z-index: 1;
          display: inherit; //~~|🠊 display: grid; 🠈|~~//
          grid-area: 1 / 1 / 7 / 4; //~~|🠊 row-start / col-start / row-end / col-end 🠈|~~//
          grid-template: 3rem auto 3rem / 1fr auto 1fr; //~~|🠊 rows / columns 🠈|~~//
          img {
            height: 100%;
            grid-area: 2 / 2 / 3 / 3; //~~|🠊 row-start / col-start / row-end / col-end 🠈|~~//
          }
        }
        // background: $green-neon;
      }
    }
  }
}
